<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example</groupId>
  <artifactId>demo</artifactId>
  <version>1.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.version>5.6.0</junit.version>
    <restassured.version>5.5.0</restassured.version>
    <selenium.version>4.27.0</selenium.version>
    <mongodb.version>5.2.1</mongodb.version>
    <lombok.version>1.18.36</lombok.version>
    <jackson.version>2.18.2</jackson.version>
    <log4j.version>2.20.0</log4j.version>
    <typesafe.version>1.4.3</typesafe.version>
    <assertj.version>3.27.0</assertj.version>
    <podam.version>8.0.2.RELEASE</podam.version>
    <noexception.version>1.9.1</noexception.version>
    <javafaker.version>1.0.2</javafaker.version>
    <extentreport.version>5.1.2</extentreport.version>
    <awaitality.version>4.2.2</awaitality.version>
    <hikaricp.version>6.2.1</hikaricp.version>
    <hsqldb.version>2.7.4</hsqldb.version>
    <maven.surefire.plugin.version>3.5.2</maven.surefire.plugin.version>
    <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
  </properties>

  <dependencyManagement>
    <!-- Centralized version control for conflicting dependencies -->
    <dependencies>
      <!-- Commons Lang -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.14.0</version>
      </dependency>

      <!-- Google Guava -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>33.3.1-jre</version>
      </dependency>

      <!-- Byte Buddy -->
      <dependency>
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <version>1.15.11</version>
      </dependency>

      <!-- SLF4J API -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.36</version>
      </dependency>

      <!-- Jackson Databind -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.18.2</version>
      </dependency>

      <!-- JSR305 -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>3.0.2</version>
      </dependency>

      <!-- Lombok -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.36</version>
      </dependency>

      <!-- Hamcrest -->
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>2.2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- JUnit to run tests -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
    </dependency>

    <!-- Java DSL for easy testing of REST services -->
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${restassured.version}</version>
    </dependency>

    <!-- Selenium for UI Automation -->
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>${selenium.version}</version>
    </dependency>

    <!-- MongoDB Driver -->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver-sync</artifactId>
      <version>${mongodb.version}</version>
    </dependency>

    <!-- Lombok to reduce boilerplate code -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Jackson for Serialization and Deserialization -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- Log4j for flexible logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <!-- Typesafe library to manage configurations-->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>${typesafe.version}</version>
    </dependency>

    <!-- AsserJ to write fluent assertions-->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- PODAM library to manufacture POJOs -->
    <dependency>
      <groupId>uk.co.jemos.podam</groupId>
      <artifactId>podam</artifactId>
      <version>${podam.version}</version>
    </dependency>

    <!-- NoException library eliminates Boilerplate Try-Catch Code: -->
    <dependency>
      <groupId>com.machinezoo.noexception</groupId>
      <artifactId>noexception</artifactId>
      <version>${noexception.version}</version>
    </dependency>

    <!-- Faker library to generate fake but pretty data -->
    <dependency>
      <groupId>com.github.javafaker</groupId>
      <artifactId>javafaker</artifactId>
      <version>${javafaker.version}</version>
    </dependency>

    <!-- JSON Schema Validator to validate if response json is as per expected schema  -->
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>json-schema-validator</artifactId>
      <version>${restassured.version}</version>
    </dependency>

    <!-- Extent Report -->
    <dependency>
      <groupId>com.aventstack</groupId>
      <artifactId>extentreports</artifactId>
      <version>${extentreport.version}</version>
    </dependency>

    <!-- A Java DSL for synchronizing asynchronous operations -->
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${awaitality.version}</version>
    </dependency>

    <!-- JDBC connection pool. -->
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikaricp.version}</version>
    </dependency>

    <!-- HSQLDB - Lightweight 100% Java SQL Database Engine -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${hsqldb.version}</version>
    </dependency>



  </dependencies>

  <build>
    <plugins>
      <!-- Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>

      <!-- Surefire Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <parallel>both</parallel>
          <threadCount>4</threadCount>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
